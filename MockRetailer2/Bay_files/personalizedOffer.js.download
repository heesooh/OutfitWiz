/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./cartridges/custom_mirakl_thebay/cartridge/client/default/js/personalizedOffer.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./cartridges/custom_mirakl_thebay/cartridge/client/default/js/personalizedOffer.js":
/*!******************************************************************************************!*\
  !*** ./cartridges/custom_mirakl_thebay/cartridge/client/default/js/personalizedOffer.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

$(document).on('click', '.more-details-CTA, .cta-chip', function (e) {
    const initOffersPage = () => {
        const parentCard_List = document.querySelectorAll(".offer-card");
        const moreDetailsCTA_List = document.querySelectorAll(".offer-card .more-details-CTA");
        const activeNowCTAchip_List = document.querySelectorAll(".offer-card.active-now .cta-chip");
        const activeNowCard_List = document.querySelectorAll(".offer-card.active-now");
        const activeNowModal = document.querySelector(".offer-modal-content.active-now");
        const activeNowModalCTAchip = document.querySelector(".offer-modal-content.active-now .cta-chip");
        const closeBtn = document.querySelector(".close");
        const modal = document.querySelector("#offer-more-details-modal");
        const activatedTxt = document.querySelector("#card-activated-block");
        const callActiveAllAPI = async (chip) => {
            const activeURL = chip.getAttribute("data-url");
            const res = await fetch(activeURL);
            const data = await res.json();
            return data.success ? data.success : false;
        };
        const closeMoreDetails = () => {
            modal.style.display = "none";
            window.onclick = () => true;
        };
        const changeToShopNow = (card, chip) => {
            card.classList.remove("active-now");
            card.classList.add("shop-now");
            chip.classList.remove("cta-chip");
            chip.classList.add("card-activated");
            chip.innerHTML = chip.getAttribute("data-activated");
            const updateTxt = card.getElementsByClassName('more-details-CTA')[0];
            updateTxt.innerHTML = chip.getAttribute("data-viewall");
        };
        activeNowModalCTAchip && activeNowModalCTAchip.addEventListener('click', async () => {
            const isOK = await callActiveAllAPI(activeNowModalCTAchip);
            isOK && changeToShopNow(activeNowModal, activeNowModalCTAchip);
        });
        activeNowCTAchip_List.forEach((chip, index) => {
            chip.addEventListener('click', async () => {
                const isOK = await callActiveAllAPI(chip);
                isOK && changeToShopNow(activeNowCard_List[index], chip);
            });
        });
        moreDetailsCTA_List.forEach((cta, index) => {
            cta.addEventListener('click', () => {
                modal.style.display = "flex";
                //modalHTML(cta, parentCard_List[index]);
                window.onclick = (e) => e.target == modal && closeMoreDetails();
            });
        });

        const modalHTML = (cta, card) => {
            modal.innerHTML = "<div class='offer-modal-content " + cta.getAttribute("data-span-status") + "'>" +
                "<span>" + card.querySelector('.offer-modal-title').innerHTML + "</span>" +
                "<span class='close'>Ã—</span>" +
                "<hr>" +
                "<div class='upper-container'>" +
                "<span>" + card.querySelector('#bannerLogo').innerHTML + "</span>" +
                "<h2>" + card.getElementsByTagName('h3')[0].innerHTML + "</h2>" +
                "<p class='short-description'>" + card.querySelector('.short-description').innerHTML + "</p>" +
                "<p class='expiry-count-down'>" + card.querySelector('.expiry-count-down').innerHTML +
                "</p></div>" +
                "<div class='lower-container'>" + card.querySelector('.lower-container').innerHTML +
                "<div class='bg-expanable-circle'></div>" +
                "</div>" +
                "<hr>" +
                "<div class='dates'>" +
                "<p class='start-date'><span class='start-date-lable'>" + cta.getAttribute("data-start-date-txt") + ": </span>" + new Date(cta.getAttribute("data-start")).toLocaleString(undefined, { month: 'short', day: '2-digit', weekday: "long" }) + "</p>" +
                "<p class='end-date'><span class='end-date-lable'>" + cta.getAttribute("data-end-date-txt") + ": </span>" + new Date(cta.getAttribute("data-end")).toLocaleString(undefined, { month: 'short', day: '2-digit', weekday: "long" }) + "</p>" +
                "</div>" +
                "<hr>" +
                "<p class='offer-terms'><span class='offer-terms-lable'>Offer terms: </span> " + cta.getAttribute("data-tnc") + " </p>" +
                "</div>";
        };
        closeBtn.addEventListener('onclick', closeMoreDetails);
    };

    initOffersPage();

});

/***/ })

/******/ });
//# sourceMappingURL=personalizedOffer.js.map